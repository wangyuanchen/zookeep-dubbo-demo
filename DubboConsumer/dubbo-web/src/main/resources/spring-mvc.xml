<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--&lt;!&ndash; 引入属性文件 &ndash;&gt;-->
    <!--<context:property-placeholder location="classpath*:conf/*/*.properties"/>-->

    <!-- AOP的配置要放在Spring-MVC的配置文件中才可以拦截到Controller -->
    <aop:aspectj-autoproxy proxy-target-class="true" />


    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->

    <context:component-scan base-package="com.qsx.dubbo"/>


    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>


    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".html"/>-->


    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--<property name="defaultEncoding">-->
            <!--<value>UTF-8</value>-->
        <!--</property>-->
        <!--<property name="maxUploadSize">-->
            <!--<value>32505856</value>&lt;!&ndash; 上传文件大小限制为31M，31*1024*1024 &ndash;&gt;-->
        <!--</property>-->
        <!--<property name="maxInMemorySize">-->
            <!--<value>4096</value>-->
        <!--</property>-->
    <!--</bean>-->

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>application/json</value>
                        </list>
                    </property>
                    <property name="fastJsonConfig" ref="fastJsonConfig"/>
                </bean>
            </list>
        </property>
        <!--<property name="order" value="1" />-->
    </bean>

    <bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
        <property name="charset" value="UTF-8"/>
        <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
        <property name="features">
            <list>
                <value>InitStringFieldAsEmpty</value>
            </list>
        </property>
        <property name="serializerFeatures">
            <list>
                <value>WriteMapNullValue</value>
                <value>QuoteFieldNames</value>
                <value>WriteNullListAsEmpty</value>
                <value>WriteNullBooleanAsFalse</value>
                <value>WriteNullStringAsEmpty</value>
                <value>WriteNullNumberAsZero</value>
            </list>
        </property>
    </bean>

    <!-- 用fastJSON解析JSON请求数据,以及将POJO序列化 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="fastJsonConfig" ref="fastJsonConfig"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:default-servlet-handler/>


    <!-- AOP式方法级权限检查  -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>-->


    <!-- 将Controller抛出的异常转到特定View -->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--<prop key="org.apache.shiro.authz.UnauthorizedException">/error</prop>-->
                <!--&lt;!&ndash;<prop key="java.lang.Throwable">/error/500</prop>&ndash;&gt;-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->


</beans>